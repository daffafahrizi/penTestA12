// app.js

const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const session = require('express-session');
const dotenv = require("dotenv");
const app = express();
const port = process.env.PORT || 8000;

// Database configuration
const db = require("./config/database");
dotenv.config();
db.connectDB();

// Definisikan skema pengguna
const userSchema = new mongoose.Schema({
    username: String,
    password: String
});

const User = mongoose.model('User', userSchema);

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('public'));
app.set('view engine', 'ejs');

// Konfigurasi sesi
app.use(session({
    secret: 'secretKey',
    resave: false,
    saveUninitialized: false
}));

// Middleware untuk memeriksa apakah pengguna telah login
const requireLogin = (req, res, next) => {
    if (req.session.userId) {
        next();
    } else {
        res.redirect('/login');
    }
};

// Halaman utama
app.get('/', requireLogin, (req, res) => {
    res.render('home');
});

// Halaman register
app.get('/register', (req, res) => {
    res.render('register');
});

// Penanganan register
app.post('/register', (req, res) => {
    const { username, password } = req.body;
    const user = new User({ username, password });

    user.save()
        .then(() => {
            res.redirect('/login');
        })
        .catch(err => {
            console.log(err);
            res.redirect('/register');
        });
});

// Halaman login
app.get('/login', (req, res) => {
    res.render('login');
});

// Penanganan login
app.post('/login', (req, res) => {
    const { username, password } = req.body;

    User.findOne({ username, password })
        .then(user => {
            if (!user) {
                res.redirect('/login');
            } else {
                req.session.userId = user._id;
                res.redirect('/');
            }
        })
        .catch(err => {
            console.log(err);
            res.redirect('/login');
        });
});

// Logout
app.get('/logout', (req, res) => {
    req.session.destroy(() => {
        res.redirect('/login');
    });
});

// Jalankan server
app.listen(port, () => {
    console.log(`Server berjalan di http://localhost:${port}`);
});
